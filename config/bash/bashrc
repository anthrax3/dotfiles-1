# bashrc

if [[ -z $BASHRC_LOADED ]]; then
  export BASHRC_LOADED=1
fi

# ユーティリティ関数 #{{{

nsec() { #{{{
  local d
  d=$(PATH=/usr/local/opt/coreutils/libexec/gnubin:/usr/bin:/bin type -p date)
  if [[ $("$d" +%N) == [0-9]* ]]; then
    eval "nsec() { $d +%s%9N; }"
  else
    nsec() { date +%s000000000; }
  fi
  nsec
} #}}}
msec() { #{{{
  local d
  d=$(PATH=/usr/local/opt/coreutils/libexec/gnubin:/usr/bin:/bin type -p date)
  if [[ $("$d" +%N) == [0-9]* ]]; then
    eval "msec() { $d +%s%3N; }"
  else
    msec() { date +%s000; }
  fi
  msec
} #}}}

# digest() {{{
eval 'digest() {
if [[ $# != 0 ]]; then
  printf %s "$1" | digest
else
  local d=($('"$(printf %q "$(type -p sha1sum || type -p shasum || type -p md5sum)")"'))
  echo "${d[0]}"
fi
}' #}}}

quote() { #{{{
  if [[ $(printf %q '~') == '~' ]]; then
    quote() { local q; q=$(printf %q "$1"); printf %s "${q//\~/\\\~/}"; }
  else
    quote() { printf %q "$1"; }
  fi
  quote "$1"
} #}}}

#}}}

# デバッグSTART {{{
BASHRC_DEBUG=1
if [[ -n $BASHRC_DEBUG ]]; then
  BASHRC_DEBUG_START=$(msec)
  .() { local s t; eval 'builtin . "$@"; s=$?; t=$(($(msec) - '"$(msec)"'))'; printf "%5d %q\n" "$t" "$1"; return "$s"; }
  source() { local s t; eval 'builtin source "$@"; s=$?; t=$(($(msec) - '"$(msec)"'))'; printf "%5d %q\n" "$t" "$1"; return "$s"; }
fi
#}}}

# rc/*.sh を名前順に source する
for f in "$(dirname "${BASH_SOURCE[0]}")"/{rc,rc.local}/*.sh; do
  if [[ -f $f ]]; then
    f=$(printf %q "$f")
    eval ". $f"' || echo -e "\e[1;35mError in '"$f"'\e[1;0m" >&2'
  fi
done

# デバッグEND {{{
if [[ -n $BASHRC_DEBUG ]]; then
  printf "%5d %s\n" $(($(msec) - BASHRC_DEBUG_START)) "${BASH_SOURCE[0]}"
  unset -v BASHRC_DEBUG_START
  unset -f source
  .() { builtin . "$@"; }
fi
#}}}
